@startuml
class Product{
+Product()
+name: string
+price: float
+__eq__(other: Product): bool
+__hash__(): hash
}
class TooManyProductsFoundError <<exception>>{}
class ServerError<<exception>>{}
abstract class Server {
+{static} n_max_returned_entries: int
+{abstract}Server(lst:list[Product])
+{abstract}get_entries(n_letters): list[Product]
}

class ListServer{
+ListServer(lst:list[Product])
+products: list[Product]
+get_entries(n_letters): list[Product]
}

class MapServer{
+MapServer(lst:list[Product])
+products: dict[Product]
+get_entries(n_letters): list[Product]
}

class Client{
+server: Server
+Client()
+get_total_price(n_letters):Optional(float)
}

MapServer "1"*--"*"Product
ListServer "1"*--"*"Product
Server<|-- ListServer
Server<|-- MapServer
Server ..> TooManyProductsFoundError : << throws >>
Client "*" o-- "1"Server
TooManyProductsFoundError--|>ServerError
@enduml
